{"version":3,"sources":["components/TodoListItem.tsx","components/TodoList.tsx","components/AddTodo.tsx","assets/logo.svg","App.tsx","features/counter/counterAPI.ts","features/counter/counterSlice.ts","app/store.ts","index.tsx"],"names":["useStyles","makeStyles","theme","listItem","display","justifyContent","width","alignItems","breakpoints","up","deleteIcon","color","TodoListItem","todo","id","handleDelete","classes","useState","isChecked","setIsChecked","className","style","textDecoration","undefined","FormControlLabel","control","Checkbox","onClick","name","label","TodoList","todos","length","map","item","modalBackdrop","position","zIndex","top","left","height","backgroundColor","modalContent","flexDirection","margin","spacing","background","border","borderRadius","padding","form","AddTodo","isModal","addTodo","currentTodo","setCurrentTodo","inputError","setInputError","e","stopPropagation","Typography","variant","onSubmit","preventDefault","trim","TextField","onChange","target","value","type","placeholder","helperText","error","Button","size","root","flexGrow","appContainer","textAlign","palette","text","secondary","img","addButton","bottom","right","initialTodos","App","setTodos","modalVisibility","setModalVisibility","toggleAddTodoModal","Grid","container","xs","src","logo","alt","Fab","todoId","filter","Fade","in","Paper","newTodo","uuidv4","isComplete","fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","initialState","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","store","configureStore","reducer","counter","counterReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.404192ac.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { FormControlLabel, FormGroup, makeStyles } from \"@material-ui/core\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { red } from \"@material-ui/core/colors\";\r\n\r\ninterface TodoListItemProps {\r\n  todo: Todo[\"todo\"];\r\n  id: Todo[\"id\"];\r\n  handleDelete: handleDelete;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  listItem: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: 360\r\n    }\r\n  },\r\n  deleteIcon: {\r\n    color: \"blue\",\r\n    \"&:hover\": {\r\n      color: \"red\",\r\n    }\r\n  }\r\n}));\r\n\r\nconst TodoListItem = ({ todo, id, handleDelete }: TodoListItemProps) => {\r\n  const classes = useStyles();\r\n\r\n  const [isChecked, setIsChecked] = useState<boolean>(false);\r\n  const handleChange = () => setIsChecked(!isChecked);\r\n\r\n  return (\r\n    <li\r\n      className={classes.listItem}\r\n      style={isChecked ? { textDecoration: \"line-through\" } : undefined}\r\n    >\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox onClick={handleChange} name=\"checkbox\" color=\"primary\" />\r\n        }\r\n        label={todo}\r\n      />\r\n      <DeleteIcon className={classes.deleteIcon} onClick={() => handleDelete(id)} />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TodoListItem;\r\n","import TodoListItem from \"./TodoListItem\";\r\n\r\ninterface TodoListProps {\r\n  todos: Array<Todo>;\r\n  handleDelete: handleDelete;\r\n\r\n}\r\n\r\nconst TodoList = ({ todos, handleDelete }: TodoListProps) => {\r\n  return (\r\n    <ul>\r\n      {todos.length > 0\r\n        ? todos.map((item) => (\r\n            <TodoListItem\r\n              todo={item.todo}\r\n              id={item.id}\r\n              key={item.id}\r\n              handleDelete={handleDelete}\r\n              \r\n            />\r\n          ))\r\n        : null}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import { Button, Modal, TextField, Typography } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modalBackdrop: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    position: \"fixed\",\r\n    zIndex: 1,\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"rgba(0, 0, 0, 0.25)\",\r\n  },\r\n  modalContent: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-evenly\",\r\n    width: \"100%\",\r\n    height: \"60%\",\r\n    margin: theme.spacing(2),\r\n    background: \"white\",\r\n    border: \"2px solid white\",\r\n    borderRadius: 5,\r\n    padding: theme.spacing(4),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: 360,\r\n    },\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-evenly\",\r\n    height: \"100%\",\r\n  },\r\n}));\r\n\r\ninterface AddTodoProps {\r\n  isModal: () => void;\r\n  addTodo: addTodo;\r\n}\r\n\r\nconst AddTodo = ({ isModal, addTodo }: AddTodoProps) => {\r\n  const classes = useStyles();\r\n\r\n  const [currentTodo, setCurrentTodo] = useState<string>(\"\");\r\n  const [inputError, setInputError] = useState<string>(\"\");\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (currentTodo.length === 0 || currentTodo.trim() === \"\") {\r\n      setInputError(\"Input is empty. Please enter a todo\");\r\n    } else {\r\n      addTodo(currentTodo);\r\n      isModal();\r\n      setInputError(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div onClick={isModal} className={classes.modalBackdrop}>\r\n      <div\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n        }}\r\n        className={classes.modalContent}\r\n      >\r\n        <Typography variant={\"h3\"}>Add Your Todo</Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit}>\r\n          <TextField\r\n            onChange={(e) => setCurrentTodo(e.target.value)}\r\n            type=\"text\"\r\n            name=\"todo\"\r\n            placeholder=\"What do you have todo?\"\r\n            value={currentTodo}\r\n            id=\"filled-basic\"\r\n            label=\"Add Todo\"\r\n            variant=\"outlined\"\r\n            helperText={inputError}\r\n            error={inputError ? true : false}\r\n          />\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"large\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n          >\r\n            Add Todo \r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTodo;\r\n","export default __webpack_public_path__ + \"static/media/logo.02afe57c.svg\";","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport TodoList from \"./components/TodoList\";\r\nimport AddTodo from \"./components/AddTodo\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport logo from \"./assets/logo.svg\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  appContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"80vh\",\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  img: {\r\n    width: 190,\r\n    margin: 50,\r\n    height: 50,\r\n  },\r\n  addButton: {\r\n    position: \"fixed\",\r\n    bottom: 24,\r\n    right: 24,\r\n  },\r\n  modalBackdrop: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    position: \"fixed\",\r\n    zIndex: 1,\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"rgba(0, 0, 0, 0.25)\",\r\n  },\r\n  modalContent: {\r\n    width: \"100%\",\r\n    height: \"60%\",\r\n    margin: theme.spacing(2),\r\n    background: \"white\",\r\n    border: \"2px solid white\",\r\n    borderRadius: 5,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: 360,\r\n    },\r\n  },\r\n}));\r\n\r\nconst initialTodos: Array<Todo> = [];\r\n\r\nconst App: React.FC = () => {\r\n  const classes = useStyles();\r\n\r\n  const [todos, setTodos] = useState<Array<Todo>>(initialTodos);\r\n\r\n  const addTodo: addTodo = (newTodo) => {\r\n    setTodos([...todos, { id: uuidv4(), todo: newTodo, isComplete: false }]);\r\n  };\r\n\r\n  const [modalVisibility, setModalVisibility] = useState(false);\r\n  const toggleAddTodoModal = (): void => setModalVisibility(!modalVisibility);\r\n\r\n  const handleDelete = (todoId: Todo[\"id\"]): void =>\r\n    setTodos(todos.filter((item) => item.id !== todoId));\r\n\r\n  return (\r\n    <>\r\n      {/* <div className={classes.app}> */}\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12}>\r\n          <div className={classes.appContainer}>\r\n            <h1>Todos</h1>\r\n            <img src={logo} alt=\"gilmnd-logo\" className={classes.img} />\r\n            {todos.length === 0 && <h4>Your Todo Will Be Added Here</h4>}\r\n            <Fab\r\n              onClick={toggleAddTodoModal}\r\n              className={classes.addButton}\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n            >\r\n              <AddIcon />\r\n            </Fab>\r\n            <TodoList todos={todos} handleDelete={handleDelete} />\r\n            {modalVisibility && (\r\n              <Fade in={modalVisibility}>\r\n                <Paper>\r\n                  <AddTodo isModal={toggleAddTodoModal} addTodo={addTodo} />\r\n                </Paper>\r\n              </Fade>\r\n            )}\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise<{ data: number }>((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport { fetchCount } from './counterAPI';\n\nexport interface CounterState {\n  value: number;\n  status: 'idle' | 'loading' | 'failed';\n}\n\nconst initialState: CounterState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount: number) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state: RootState) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount: number): AppThunk => (\n  dispatch,\n  getState\n) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}